spring.application.name=api_test

# ======================
# PostgreSQL Database Config
# ======================
spring.datasource.url=jdbc:postgresql://localhost:5432/new_test_api
spring.datasource.username=postgres
spring.datasource.password=spring2025
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true



# ======================
# Hibernate / JPA
# ======================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update


# ======================
# File Upload
# ======================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
# JWT Config
jwt.secret=replace_this_with_32+_characters_random_key_here!
jwt.expiration_ms=86400000

# H2 console (for quick testing)
spring.h2.console.enabled=true


# CORS: front-end origin
app.frontend.origin=http://localhost:3000
# ======================
# Mail Config
# ======================
spring.mail.host=mail.fahim-khan-96.org
spring.mail.port=587
spring.mail.username=no-reply_java_spring@fahim-khan-96.org
spring.mail.password=^b0Xclp,JHhtP=^P
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# ======================
# Web Access (for multi-device testing)
# ======================
server.address=0.0.0.0
server.port=8080







# JWT secret (use a secure 32+ char string in production)



# Allow Spring to run on port 8080

